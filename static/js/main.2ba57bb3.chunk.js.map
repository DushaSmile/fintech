{"version":3,"sources":["reducers/cartReducer.js","actions/types.js","reducers/index.js","store/index.js","components/common/InputField.jsx","components/CartContainer/ItemForm/NewItemForm.jsx","components/CartContainer/DiscountForm/ApplyCartDiscountForm.jsx","util/calculateDiscount.js","components/CartContainer/Cart.jsx","containers/CartContainer.jsx","actions/cartActions.js","index.js"],"names":["initialState","items","discount","total","cartReducer","state","arguments","length","undefined","action","type","Object","objectSpread","concat","toConsumableArray","item","price","combineReducers","cart","form","formReducer","store","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","InputField","props","input","placeholder","required","min","react_default","a","createElement","FormGroup","FormControl","assign","reduxForm","pristine","Form","inline","onSubmit","handleSubmit","Col","xs","sm","md","lg","Field","name","component","Button","bsStyle","disabled","connectedReduxForm","connect","initialValues","calculateDiscount","products","newProducts","Array","maxPriceIdx","sum","maxPrice","i","discSum","disc","sumWithoutMaxPrice","discPrice","Math","ceil","Cart","_ref","calculatedDiscountItems","Table","bordered","striped","map","index","key","align","reduce","prev","el","CartContainer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onNewItemFormSubmit","bind","assertThisInitialized","onApplyCartDiscountForm","values","addCartItem","Number","parseInt","applyDiscount","Grid","Row","ItemForm_NewItemForm","CartContainer_Cart","DiscountForm_ApplyCartDiscountForm","React","Component","dispatch","ReactDOM","render","es","containers_CartContainer","document","getElementById"],"mappings":"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","file":"static/js/main.2ba57bb3.chunk.js","sourcesContent":["import {\n    ADD_CART_ITEM,\n    APPLY_DISCOUNT\n} from '../actions/types';\n\nconst initialState = {\n    items: [],\n    discount: 10,\n    total: 0,\n};\n\nconst cartReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_CART_ITEM:\n            return {\n                ...state,\n                items: [\n                    ...state.items,\n                    action.item,\n                ],\n                total: state.total + action.item.price\n            };\n        case APPLY_DISCOUNT:\n            return {\n                ...state,\n                discount: action.discount\n            };\n        default:\n            return state;\n    }\n};\n\nexport default cartReducer;","export const ADD_CART_ITEM = 'ADD_CART_ITEM';\nexport const APPLY_DISCOUNT = 'APPLY_DISCOUNT';","import { combineReducers } from 'redux';\n\nimport { reducer as formReducer } from 'redux-form';\n\nimport cartReducer from './cartReducer';\n\nexport default combineReducers({\n    cart: cartReducer,\n    form: formReducer\n});","import { createStore } from 'redux';\n\nimport rootReducer from '../reducers/index';\n\n// devTools\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(\n    rootReducer,\n    // reduxDevTools\n);\n\nexport default store;","import React from 'react';\n\nimport { FormGroup, FormControl } from 'react-bootstrap';\n\nconst InputField = props => {\n    const { input, type, placeholder, required, min } = props;\n    return (\n        <FormGroup>\n            <FormControl\n                type={type}\n                placeholder={placeholder}\n                required={required}\n                min={min}\n                {...input}\n            />\n        </FormGroup>\n    )\n};\n\nexport default InputField;","import React from 'react';\n\nimport { Button, Col, Form } from 'react-bootstrap';\nimport InputField from '../../common/InputField';\n\nimport { reduxForm, Field } from 'redux-form';\n\nconst NewItemForm = props => {\n    const { pristine } = props;\n    return (\n        <Form inline={true} onSubmit={props.handleSubmit}>\n            <Col xs={12} sm={6} md={5} lg={4}>\n                <Field\n                    name=\"name\"\n                    component={InputField}\n                    placeholder=\"Продукт\"\n                    required={true}\n                    type=\"text\" />\n                <Field\n                    name=\"price\"\n                    component={InputField}\n                    placeholder=\"Цена\"\n                    required={true}\n                    min={1}\n                    type=\"number\" />\n            </Col>\n            <Col xs={12} sm={4} md={4} lg={5}>\n                <Button bsStyle=\"success\" type=\"submit\" disabled={pristine}>Добавить</Button>\n            </Col>\n        </Form>\n    )\n};\n\nexport default reduxForm({\n    form: 'ItemForm'\n})(NewItemForm);","import React from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { Button, Col, Form } from 'react-bootstrap';\nimport InputField from '../../common/InputField'\n\nimport { reduxForm, Field } from 'redux-form';\n\nconst ApplyCartDiscountForm = props => {\n    const { pristine } = props;\n    return (\n        <Form inline={true} onSubmit={props.handleSubmit}>\n            <Col xs={7} sm={7} md={7} lg={7}>\n                Применить скидку\n                <Field\n                    name=\"discount\"\n                    component={InputField}\n                    required={true}\n                    min={1}\n                    type=\"number\" />\n                рублей\n            </Col>\n            <Col xs={4} sm={4} md={4} lg={3}>\n                <Button bsStyle=\"success\" type=\"submit\" disabled={pristine}>Применить</Button>\n            </Col>\n        </Form>\n    )\n};\n\nconst connectedReduxForm = reduxForm({\n    form: 'DiscountForm',\n})(ApplyCartDiscountForm);\n\nexport default connect(\n    state => ({\n        initialValues: {\n            discount: state.cart.discount\n        }\n    })\n)(connectedReduxForm);","// Алгоритм позаимствован отсюда, чтобы не изобретать велосипед\n// https://github.com/lampelay/react-redux-test-task/blob/master/src/functions/calcDiscPrice.js\n\nconst calculateDiscount = (products, discount) => {\n\n    const newProducts = new Array(products.length);\n    if (newProducts.length) {\n        /**Суммарная стоимость без скидки */\n        let sum = 0;\n        /**Максимальная цена товара */\n        let maxPrice = -Infinity;\n        /**Индекс товара с максимальной ценой */\n        let maxPriceIdx;\n        // используем классический цикл for как наиболее быстрый\n        // для обхода массива\n        for (let i = 0; i < products.length; i++) {\n            // ищем товар с максимальной ценой\n            if (maxPrice < products[i].price) {\n                maxPrice = products[i].price;\n                maxPriceIdx = i;\n            }\n            // ищем суммарную стоимость\n            sum += products[i].price;\n        }\n        /**Суммарная стоимость со скидкой */\n        let discSum = sum - discount;\n        if (discSum < 0) discSum = 0;\n        /**Относительня стоимость (отношение суммы со скидкой к начальной сумме) */\n        const disc = discSum / sum || 0;\n        /**Суммарная стоимость товаров со скидкой без самого дорогого товара */\n        let sumWithoutMaxPrice = 0;\n        for (let i = 0; i < products.length; i++) {\n            // наполняем массив результата\n            newProducts[i] = {...products[i]};\n            if (i !== maxPriceIdx) {\n                // вычисляем стоимость каждого товара со скидкой, округляем вверх\n                newProducts[i].discPrice = Math.ceil(newProducts[i].price * disc);\n                // стоимость товара не должна быть отрицательной\n                if (newProducts[i].discPrice < 0) newProducts[i].discPrice = 0;\n                sumWithoutMaxPrice += newProducts[i].discPrice;\n            }\n        }\n        // стоимость самого дорогого товара со скидкой вычисляем путём вычитания\n        // суммарной стоимости остальных товаров со скидкой из общей стоимости со скидкой\n        newProducts[maxPriceIdx].discPrice = discSum - sumWithoutMaxPrice;\n        // если его стоимость меньше нуля, приравниваем её к нулю\n        // и снижаем стоимость любого другого товара, чтобы сумма со скидкой сохранилась\n        if (newProducts[maxPriceIdx].discPrice < 0) {\n            const idx = maxPriceIdx === 0 ? 1 : 0;\n            newProducts[idx].discPrice += newProducts[maxPriceIdx].discPrice;\n            newProducts[maxPriceIdx].discPrice = 0;\n        }\n    }\n    return newProducts;\n\n};\n\nexport default calculateDiscount;","import React from 'react';\n\nimport { Table, Col } from 'react-bootstrap';\n\nimport calculateDiscount from '../../util/calculateDiscount';\n\nconst Cart = ({cart}) => {\n    const calculatedDiscountItems = calculateDiscount(cart.items, cart.discount);\n    return (\n        <Col xs={12} sm={6} md={6}>\n            <Table bordered={true} striped={true}>\n                <thead>\n                    <tr>\n                        <th>Продукт</th>\n                        <th>Цена</th>\n                        <th>Цена со скидкой</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {calculatedDiscountItems.map((item, index) => (\n                        <tr key={index}>\n                            <td>{item.name}</td>\n                            <td>{item.price}</td>\n                            <td>{item.discPrice}</td>\n                        </tr>\n                    ))}\n                </tbody>\n                <tfoot>\n                    {cart.items.length > 0 && (\n                        <tr>\n                            <td align=\"right\">Итого</td>\n                            <td>{calculatedDiscountItems.reduce((prev, el) => prev + el.price, 0)}</td>\n                            <td>{calculatedDiscountItems.reduce((prev, el) => prev + el.discPrice, 0)}</td>\n                        </tr>\n                    )}\n                </tfoot>\n            </Table>\n        </Col>\n    )\n};\n\nexport default Cart;","import React from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { Grid, Row } from 'react-bootstrap';\nimport ItemForm from '../components/CartContainer/ItemForm/NewItemForm';\nimport DiscountForm from '../components/CartContainer/DiscountForm/ApplyCartDiscountForm';\nimport Cart from '../components/CartContainer/Cart';\n\nimport { addCartItem } from '../actions/cartActions';\nimport { applyDiscount } from '../actions/cartActions';\n\nclass CartContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onNewItemFormSubmit = this.onNewItemFormSubmit.bind(this);\n        this.onApplyCartDiscountForm = this.onApplyCartDiscountForm.bind(this);\n    }\n\n    onNewItemFormSubmit(values) {\n        this.props.addCartItem({\n            name: values.name,\n            price: Number.parseInt(values.price)\n        });\n    }\n\n    onApplyCartDiscountForm(values) {\n        this.props.applyDiscount(Number.parseInt(values.discount));\n    }\n\n    render() {\n        return (\n            <Grid>\n                <Row>\n                    <h1>Добавить продукт</h1>\n                    <ItemForm onSubmit={this.onNewItemFormSubmit} />\n                </Row>\n                <hr/>\n                <Row>\n                    <h1>Корзина</h1>\n                    <Cart cart={this.props.cart} />\n                    <DiscountForm onSubmit={this.onApplyCartDiscountForm} />\n                </Row>\n            </Grid>\n        )\n    }\n}\n\nexport default connect(\n    state => ({\n        cart: state.cart\n    }),\n    dispatch => {\n        return {\n            addCartItem: item => {\n                dispatch(\n                    addCartItem(item)\n                )\n            },\n            applyDiscount: discount => {\n                dispatch(\n                    applyDiscount(discount)\n                )\n            }\n        }\n    }\n)(CartContainer);","import {\n    ADD_CART_ITEM,\n    APPLY_DISCOUNT\n} from './types';\n\nexport const addCartItem = item => ({\n    type: ADD_CART_ITEM,\n    item: item\n});\n\nexport const applyDiscount = discount => ({\n    type: APPLY_DISCOUNT,\n    discount: discount\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nimport CartContainer from './containers/CartContainer';\n\nReactDOM.render(\n    <Provider store={store}>\n        <CartContainer />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}